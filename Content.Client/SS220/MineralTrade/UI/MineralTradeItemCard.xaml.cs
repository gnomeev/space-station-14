using Content.Shared.SS220.MineralTrade.Protos;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Map;
using Robust.Shared.Prototypes;

namespace Content.Client.SS220.MineralTrade.UI;

[GenerateTypedNameReferences]
public sealed partial class MineralTradeItemCard : PanelContainer
{
    [Dependency] private readonly IEntityManager _entMan = default!;

    public Action<string, int>? OnBuy;
    public Action<string, int>? OnSell;
    public bool CheckoutCard = false;
    public EntProtoId? ProtoId;
    private int _amount = 0;

    public MineralTradeItemCard()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

    }

    public void SetItem(MineralListingPrototype proto)
    {
        if (proto.ListingEntityId != null)
        {
            ProtoId = proto.ListingEntityId;

            if (proto.Name != null)
                MaterialName.Text = Loc.GetString(proto.Name);

            MaterialPrice.Text = proto.Price.ToString();
            MaterialView.SetPrototype(proto.ListingEntityId);

            if (CheckoutCard)
            {
                BuyButton.Visible = false;
                SellButton.Visible = false;
            }

            BuyButton.OnPressed += (_) =>
            {
                OnBuy ?.Invoke(proto.ID, _amount);
            };

            SellButton.OnPressed += (_) =>
            {
                OnSell ?.Invoke(proto.ID, _amount);
            };

            AmountLineEdit.OnTextChanged += OnAmountChanged;
        }
    }

    private void OnAmountChanged(LineEdit.LineEditEventArgs args)
    {
        if (!int.TryParse(args.Text, out var amount))
            return;

        _amount = amount;
    }
}
