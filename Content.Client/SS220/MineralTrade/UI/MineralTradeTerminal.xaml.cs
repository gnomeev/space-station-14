using Content.Client.Cargo.Systems;
using Content.Client.UserInterface.Controls;
using Content.Shared.SS220.MineralTrade.Protos;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.SS220.MineralTrade.UI;

[GenerateTypedNameReferences]
public sealed partial class MineralTradeTerminal : FancyWindow
{
    public Action<string, int>? AddToCart;
    public Action<Dictionary<MineralListingPrototype, int>>? CartCheckout;

    public MineralTradeTerminal()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);
    }

    public void PopulateMaterialList(List<MineralListingPrototype> listingPrototypes)
    {
        TradeCardsList.RemoveAllChildren();

        foreach (var listing in listingPrototypes)
        {
            var card = new MineralTradeItemCard();
            card.SetItem(listing);

            card.OnBuy += (s, a) =>
            {
                AddToCart?.Invoke(s, a);
            };

            TradeCardsList.AddChild(card);
        }
    }

    public void PopulateCheckoutList(Dictionary<MineralListingPrototype, int> cartItems)
    {
        foreach (var (listing, count) in cartItems)
        {
            var checkoutBox = new BoxContainer()
            {
                Orientation = BoxContainer.LayoutOrientation.Horizontal,
                Margin = new Thickness(10, 0),
            };

            var entProtoView = new EntityPrototypeView();
            {
                entProtoView.SetPrototype(listing.ListingEntityId);
            }

            var nameLabel = new Label()
            {
                Text = listing.Name,
            };

            var countLabel = new Label()
            {
                Text = $"{count}",
            };

            checkoutBox.AddChild(entProtoView);
            checkoutBox.AddChild(nameLabel);
            checkoutBox.AddChild(countLabel);

            CheckoutButton.OnPressed += _ => CartCheckout?.Invoke(cartItems);

            CheckoutList.AddChild(checkoutBox);
        }
    }

    public void UpdateBank(int points)
    {
        CargoBank.Text = points.ToString();
    }
}

